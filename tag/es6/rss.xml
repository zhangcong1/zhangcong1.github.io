<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>不管给谁打工，都要为自己学东西～ • Posts by &#34;es6&#34; tag</title>
        <link>https://zhangcong1.github.io</link>
        <description>zc个人博客</description>
        <language>zh-CN</language>
        <pubDate>Mon, 19 Jul 2021 11:24:38 +0800</pubDate>
        <lastBuildDate>Mon, 19 Jul 2021 11:24:38 +0800</lastBuildDate>
        <category>Vue</category>
        <category>React</category>
        <category>JavaScript</category>
        <category>ES6</category>
        <item>
            <guid isPermalink="true">https://zhangcong1.github.io/web/JavaScript/ES6%E7%AC%94%E8%AE%B0/</guid>
            <title>ES6笔记</title>
            <link>https://zhangcong1.github.io/web/JavaScript/ES6%E7%AC%94%E8%AE%B0/</link>
            <category>JavaScript</category>
            <category>ES6</category>
            <pubDate>Mon, 19 Jul 2021 11:24:38 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;let和const命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#let和const命令&#34;&gt;#&lt;/a&gt; let 和 const 命令&lt;/h2&gt;
&lt;h3 id=&#34;let命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#let命令&#34;&gt;#&lt;/a&gt; let 命令&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;- 不存在变量提升（变量先声明后使用）
- 暂时性死区（块级作用域）
- 不允许重复声明
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;const命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#const命令&#34;&gt;#&lt;/a&gt; const 命令&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;声明只读常量，一旦声明就必须立即初始化&lt;br&gt;
对于复合类型（对象，数组，函数）的变量指向数据所在地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; a = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.push(&lt;span class=&#34;string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//可执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a.length = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;    &lt;span class=&#34;comment&#34;&gt;//可执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = [&lt;span class=&#34;string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;]    &lt;span class=&#34;comment&#34;&gt;//报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//对象冻结 Object.freeze&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; constantize = &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;obj&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;Object&lt;/span&gt;.freeze(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;Object&lt;/span&gt;.keys(obj).forEach(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;key, value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;typeof&lt;/span&gt; obj[key] === &lt;span class=&#34;string&#34;&gt;&amp;#x27;object&amp;#x27;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      constantize(obj[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;变量的解构赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量的解构赋值&#34;&gt;#&lt;/a&gt; 变量的解构赋值&lt;/h2&gt;
&lt;h3 id=&#34;数组的解构赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组的解构赋值&#34;&gt;#&lt;/a&gt; 数组的解构赋值&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 默认值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = [&lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x &lt;span class=&#34;comment&#34;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = [&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x &lt;span class=&#34;comment&#34;&gt;//null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：ES6 内部使用严格相等运算符（===），判断一个位置是否有值。所以，如果一个数组成员不严格等于  &lt;code&gt;undefined&lt;/code&gt; ，默认值不会生效。 null 不严格等于 undefined&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;f&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [x = f()] = [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [y = f()] = [&lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果默认值是一个表达式，那么这个表达式是 &lt;strong&gt;惰性求值&lt;/strong&gt;，即只有在用到时才会求值&lt;/p&gt;
&lt;h3 id=&#34;对象的解构赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对象的解构赋值&#34;&gt;#&lt;/a&gt; 对象的解构赋值&lt;/h3&gt;
&lt;p&gt;数组的元素是按次序排列的。对象的属性没有次序，变量必须与属性同名。&lt;/p&gt;
&lt;h3 id=&#34;字符串的解构赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串的解构赋值&#34;&gt;#&lt;/a&gt; 字符串的解构赋值&lt;/h3&gt;
&lt;h3 id=&#34;数值和布尔值的解构赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数值和布尔值的解构赋值&#34;&gt;#&lt;/a&gt; 数值和布尔值的解构赋值&lt;/h3&gt;
&lt;p&gt;解构赋值的规则是，只要等号右边的值不是对象，就先将其转为对象。由于 undefined 和 null 无法转为对象。所以对他们进行解构赋值，都会报错。&lt;/p&gt;
&lt;h3 id=&#34;函数参数的解构赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数参数的解构赋值&#34;&gt;#&lt;/a&gt; 函数参数的解构赋值&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;move&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&amp;#123;x, y&amp;#125; = &amp;#123;x:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, y:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [x,y]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;move(&amp;#123;&lt;span class=&#34;attr&#34;&gt;x&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;y&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&amp;#125;)  &lt;span class=&#34;comment&#34;&gt;// [3,8]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;move(&amp;#123;&lt;span class=&#34;attr&#34;&gt;x&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&amp;#125;) &lt;span class=&#34;comment&#34;&gt;// [3,undefined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;move(&amp;#123;&amp;#125;) &lt;span class=&#34;comment&#34;&gt;// [undefined,undefined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;move() &lt;span class=&#34;comment&#34;&gt;// [0,0]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;用途&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用途&#34;&gt;#&lt;/a&gt; 用途&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;交换变量的值&lt;br&gt;
 &lt;code&gt;[x, y] = [y, x]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从函数返回多个值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;example&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;foo&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;bar&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; foo, bar &amp;#125; = example()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;函数参数的定义&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;f&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&amp;#123;x,y,z&amp;#125;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f(&amp;#123;&lt;span class=&#34;attr&#34;&gt;z&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;attr&#34;&gt;y&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;attr&#34;&gt;x&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;提取 JSON 数据&lt;/li&gt;
&lt;li&gt;函数参数的默认值&lt;/li&gt;
&lt;li&gt;遍历 Map 解构&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Map&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(&lt;span class=&#34;string&#34;&gt;&amp;#x27;first&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;map.set(&lt;span class=&#34;string&#34;&gt;&amp;#x27;second&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;world&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [key, value] &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; map)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(key + &lt;span class=&#34;string&#34;&gt;&amp;quot; is &amp;quot;&lt;/span&gt; + value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;输入模块的指定方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const &amp;#123; SourceMapConsumer, SourceNode &amp;#125; = require(&amp;quot;source-map&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;字符串的扩展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串的扩展&#34;&gt;#&lt;/a&gt; 字符串的扩展&lt;/h2&gt;
&lt;h3 id=&#34;字符的unicode表示法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符的unicode表示法&#34;&gt;#&lt;/a&gt; 字符的 Unicode 表示法&lt;/h3&gt;
&lt;h3 id=&#34;codepointat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#codepointat&#34;&gt;#&lt;/a&gt; codePointAt()&lt;/h3&gt;
&lt;p&gt;能正确处理 4 个字节存储的字符，返回一个字符的码点&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;is32Bit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; c.codePointAt(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;gt; &lt;span class=&#34;number&#34;&gt;0xFFFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;is32Bit(&lt;span class=&#34;string&#34;&gt;&amp;quot;𠮷&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;is32Bit(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;stringfromcodepoint&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#stringfromcodepoint&#34;&gt;#&lt;/a&gt; String.fromCodePoint()&lt;/h3&gt;
&lt;p&gt;ES5 提供 &lt;code&gt;String.fromCharCode&lt;/code&gt;  方法，用于从码点返回对应字符，但这个方法不能识别 32 位的 UTF-16 字符（Unicode 编号大于 0xFFFF）&lt;br&gt;
注意： &lt;code&gt;fromCodePoint&lt;/code&gt;  定义在 String 对象上，而   &lt;code&gt;codePointAt&lt;/code&gt;  定义在字符串的实例对象上&lt;/p&gt;
&lt;h3 id=&#34;字符串的遍历器接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串的遍历器接口&#34;&gt;#&lt;/a&gt; 字符串的遍历器接口&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;at&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#at&#34;&gt;#&lt;/a&gt; at()&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;charAt()&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;includes-startswith-endswith&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#includes-startswith-endswith&#34;&gt;#&lt;/a&gt; includes(), startsWith(), endsWith()&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var s = &amp;#x27;Hello World!&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.startsWith(&amp;#x27;world&amp;#x27;, 6); // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.endsWith(&amp;#x27;Hello&amp;#x27;, 5);   // true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.includes(&amp;#x27;Hello&amp;#x27;, 6)    // false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;repeatn&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#repeatn&#34;&gt;#&lt;/a&gt; repeat(n)&lt;/h3&gt;
&lt;h3 id=&#34;padstart-padend-字符串的补全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#padstart-padend-字符串的补全&#34;&gt;#&lt;/a&gt; padStart (), padEnd () 字符串的补全&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;1234&amp;#x27;&lt;/span&gt;.padStart(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 0000001234&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;09-12&amp;#x27;&lt;/span&gt;.padStart(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;YYYY-MM-DD&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//YYYY-09-12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;模板字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模板字符串&#34;&gt;#&lt;/a&gt; 模板字符串&lt;/h3&gt;
&lt;h2 id=&#34;正则的扩展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正则的扩展&#34;&gt;#&lt;/a&gt; 正则的扩展&lt;/h2&gt;
&lt;h3 id=&#34;regexp构造函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#regexp构造函数&#34;&gt;#&lt;/a&gt; RegExp 构造函数&lt;/h3&gt;
&lt;p&gt;ES6 支持第一个参数是正则表达式，第二个参数指定修饰符&lt;br&gt;
 &lt;code&gt;new RegExp(/abc/ig, &#39;i&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;字符串的正则方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串的正则方法&#34;&gt;#&lt;/a&gt; 字符串的正则方法&lt;/h3&gt;
&lt;p&gt;字符串对象共有 4 个方法可以使用正则表达式： &lt;code&gt;match(),replace(),search(),split()&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;数值的扩展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数值的扩展&#34;&gt;#&lt;/a&gt; 数值的扩展&lt;/h2&gt;
&lt;h3 id=&#34;二进制和八进制表示法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二进制和八进制表示法&#34;&gt;#&lt;/a&gt; 二进制和八进制表示法&lt;/h3&gt;
&lt;p&gt;二进制：0b（0B）八进制：0o（0O）转为十进制（Number (‘0b111’)）&lt;/p&gt;
&lt;h3 id=&#34;numberisfinite-numberisnan-numberisinteger&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#numberisfinite-numberisnan-numberisinteger&#34;&gt;#&lt;/a&gt; Number.isFinite(), Number.isNaN(), Number.isInteger(),&lt;/h3&gt;
&lt;h3 id=&#34;math对象的扩展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#math对象的扩展&#34;&gt;#&lt;/a&gt; Math 对象的扩展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Math.trunc ()  去除一个数的小数部分，返回整数部分&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Math&lt;/span&gt;.trunc = math.trunc || &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; x &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;built_in&#34;&gt;Math&lt;/span&gt;.ceil(x) : &lt;span class=&#34;built_in&#34;&gt;Math&lt;/span&gt;.floor(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Math.sign ()  判断一个数到底是正数，负数，还是零&lt;br&gt;
正数返回 +1；负数返回 - 1；0 返回 0；-0 返回 0；其他值返回 NaN&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Math&lt;/span&gt;.sign = &lt;span class=&#34;built_in&#34;&gt;Math&lt;/span&gt;.sign || &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = +x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(x === &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || &lt;span class=&#34;built_in&#34;&gt;isNaN&lt;/span&gt;(x))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; x &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; : -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;指数运算符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指数运算符&#34;&gt;#&lt;/a&gt; 指数运算符&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ** &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a **= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;数组的扩展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组的扩展&#34;&gt;#&lt;/a&gt; 数组的扩展&lt;/h2&gt;
&lt;h3 id=&#34;arrayfrom&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arrayfrom&#34;&gt;#&lt;/a&gt; Array.from()&lt;/h3&gt;
&lt;p&gt;Array.from 方法用于将两类对象转为真正的数组：类似数组的对象和可遍历对象（Set 和 Map）&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Array.prototype.slice&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; toArray = (&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from ? &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from : &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;obj&lt;/span&gt; =&amp;gt;&lt;/span&gt; [].slice.call(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Array.from 还可以接受第二个参数，作用类似于 &lt;code&gt;map&lt;/code&gt;  方法，用来对每个元素进行处理，将处理后的值放入返回的数组。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from(arrayLike, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x * x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from(arrayLike).map(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x * x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 取出一组DOM节点的文本内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; spans = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&#34;string&#34;&gt;&amp;#x27;span.name&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// map()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; names1 = &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.prototype.map.call(spans, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; s.textContent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Array.from()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; names2 = &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from(spans, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;s&lt;/span&gt; =&amp;gt;&lt;/span&gt; s.textContent)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将数组中布尔值为 false 的成员转为 0&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;], &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;n&lt;/span&gt;) =&amp;gt;&lt;/span&gt; n || &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// [1,0,2,0,3]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回各种数据的类型&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;typesOf&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from(&lt;span class=&#34;built_in&#34;&gt;arguments&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;value&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;typeof&lt;/span&gt; value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typesOf(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, [], &lt;span class=&#34;literal&#34;&gt;NaN&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// [&amp;#x27;object&amp;#x27;, &amp;#x27;object&amp;#x27;, &amp;#x27;number&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Array.from 的第三个参数用来绑定 this。&lt;br&gt;
Array.from () 可以将各种值转为真正的数组，并且还提供了 map 功能。另一个应用是将字符串转为数组，然后返回长度，解决 JavaScript 将大于 \uFFFF 的 unicode 字符。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from(&amp;#123; &lt;span class=&#34;attr&#34;&gt;length&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &amp;#125;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;jack&amp;#x27;&lt;/span&gt;);  &lt;span class=&#34;comment&#34;&gt;// [&amp;#x27;jack&amp;#x27;,&amp;#x27;jack&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;countSymbols&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;string&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.from(string).length&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;arrayof&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arrayof&#34;&gt;#&lt;/a&gt; Array.of()&lt;/h3&gt;
&lt;p&gt;Array.of 方法用于将一组值转换为数组。弥补了 Array () 方法只传一个参数是指定数组的长度。&lt;/p&gt;
&lt;h3 id=&#34;数组实例的copywithin&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组实例的copywithin&#34;&gt;#&lt;/a&gt; 数组实例的 copyWithin ()&lt;/h3&gt;
&lt;p&gt;在当前数组内部，将指定位置的成员复制到其他位置（会覆盖原有成员），然后返回当前数组。会修改原数组。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.prototype.copyWithin(target, start = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, end = &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.length)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;数组实例的find和findindex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组实例的find和findindex&#34;&gt;#&lt;/a&gt; 数组实例的 find () 和 findIndex ()&lt;/h3&gt;
&lt;p&gt;数组实例的 find 方法，用于找出第一个符合条件的数组成员。&lt;br&gt;
参数是一个回调函数，找出第一个返回值为 &lt;code&gt;true&lt;/code&gt;  的成员，然后返回该成员，如果没有符合条件的成员，则返回  &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;].find(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;value, index, arr&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; value &amp;gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)  &lt;span class=&#34;comment&#34;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;findIndex () 返回第一个符合条件的数组成员的位置，没有返回 &lt;strong&gt;-1&lt;/strong&gt;。可以发现 NaN.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;literal&#34;&gt;NaN&lt;/span&gt;].indexOf(&lt;span class=&#34;literal&#34;&gt;NaN&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// -1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;literal&#34;&gt;NaN&lt;/span&gt;].findIndex(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;y&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Object&lt;/span&gt;.is(&lt;span class=&#34;literal&#34;&gt;NaN&lt;/span&gt;, y)) &lt;span class=&#34;comment&#34;&gt;// 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;数组实例的fill&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组实例的fill&#34;&gt;#&lt;/a&gt; 数组实例的 fill ()&lt;/h3&gt;
&lt;p&gt;fill 方法使用给定值，填充一个数组。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;].fill(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// [7,7,7]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;).fill(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)   &lt;span class=&#34;comment&#34;&gt;// [7,7,7]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;].fill(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// [&amp;#x27;a&amp;#x27;,7,&amp;#x27;c&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用于空数组的初始化非常方便。&lt;/p&gt;
&lt;h3 id=&#34;数组实例的entries-keys-和-values&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组实例的entries-keys-和-values&#34;&gt;#&lt;/a&gt; 数组实例的 entries (), keys () 和 values ()&lt;/h3&gt;
&lt;p&gt;都返回一个遍历器对象，可以用  &lt;code&gt;for...of&lt;/code&gt;  进行遍历&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; index &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;].keys()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(index)  &lt;span class=&#34;comment&#34;&gt;// 0  1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; elem &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;].values())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(elem)   &lt;span class=&#34;comment&#34;&gt;// &amp;#x27;a&amp;#x27;  &amp;#x27;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; [index,elem] &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;].entries())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(index, elem);  &lt;span class=&#34;comment&#34;&gt;// 0 &amp;quot;a&amp;quot;     1 &amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不使用 for…of 循环，可以手动调用遍历器对象的 next () 方法进行遍历。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; letter = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; entries = letter.entries()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;entries.next().value  &lt;span class=&#34;comment&#34;&gt;// [0, &amp;#x27;a&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;entries.next().value  &lt;span class=&#34;comment&#34;&gt;// [1, &amp;#x27;b&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;entries.next().value  &lt;span class=&#34;comment&#34;&gt;// [2, &amp;#x27;c&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;数组实例的includes&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组实例的includes&#34;&gt;#&lt;/a&gt; 数组实例的 includes ()&lt;/h3&gt;
&lt;p&gt;Array.prototype.includes 方法返回一个布尔值。&lt;br&gt;
第二个参数表示搜索的起始位置，默认 0，负数表示倒数位置。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; contains = (&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;Array&lt;/span&gt;.prototype.includes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ? &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;arr, value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.includes(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    : &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;arr, value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.some(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;el&lt;/span&gt; =&amp;gt;&lt;/span&gt; el === value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;contains([&lt;span class=&#34;string&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;], &lt;span class=&#34;string&#34;&gt;&amp;quot;baz&amp;quot;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// =&amp;gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;另外，Map 和 Set 数据结构有一个 has 方法，需要注意与 includes 区分。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Map 结构的 has 方法，是用来查找键名的，比如  &lt;code&gt;Map.prototype.has(key) WeakMap.prototype.has(key) Reflect.has(target, propertyKey)&lt;/code&gt; &lt;br&gt;
 Set 结构的 has 方法，是用来查找值的，比如 &lt;code&gt;Set.prototype.has(value) WeakSet.prototype.has(value)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数组的空位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组的空位&#34;&gt;#&lt;/a&gt; 数组的空位&lt;/h3&gt;
 ]]></description>
        </item>
    </channel>
</rss>
